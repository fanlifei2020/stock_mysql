def tupo(series):
    df = pro.daily(ts_code=series['ts_code'], start_date=series['trade_date']) 
    high = series['close']
    df = df[:-1] #去除涨停当天
    df = df.tail(30)#30天内
    df.sort_values(by='trade_date',ascending=True,inplace=True)
    print(series['trade_date'],end=',')
    
    
    high_setted = 0
    for index,row in df.iterrows():
        #print("日期：",row['trade_date'])
        if high_setted == 0:
            if row['pct_chg']>9.92:
                #print("如果涨停，则最高价为涨停价")
                high = row['close']
            else:

                #print("未涨停，最高价为当日最高价")
                if row['high']<row['pre_close']:
                    #print("未涨停，最高价低于昨日涨停，则最高价还是昨日涨停")
                    high = row['pre_close']
                else:
                    #print("未涨停，最高价更新")
                    high = row['high']
                high_setted = 1
        else:
            if row['high']>high*1.16:
                #print("有超过最高点")
                return 1
    
    return 0
def tupo_prifit(series):
    df = pro.daily(ts_code=series['ts_code'], start_date=series['trade_date']) 
    high = series['close']
    df = df[:-1] #去除涨停当天
    df = df.tail(30)#30天内
    df.sort_values(by='trade_date',ascending=True,inplace=True)
    print(series['trade_date'],end=',')
    
    
    not_zt = 0
    for index,row in df.iterrows():
        #print("日期：",row['trade_date'])
        if buy_price == 0:
            print("未买入")
            if not_zt == 0:
                print("昨天涨停着")
                if row['pct_chg']<9.92:
                    print("今日未涨停")
                    not_zt = 1
                    if row['high']<row['pre_close']:
                        print("最高点没超过昨天,仍为昨天涨停价")
                        high = row['pre_close']

                    else:
                        print("最高点超过昨天，今天最高点为最高价")
                        high = row['high']
                else:
                    print("涨停，更新high")
                    high = row['close']
            else:
                print("昨天没涨停，开始往后算有无profit")
                if row['high']>high:
                    buy_price = high
        else:
            print("已买入")
            if row['high']>high*1.01:
                #print("有超过最高点,达到盈利点，卖出")
                return 1
            
            
        
    if buy_price == 0:
        #print("未突破，无买点")
        return np.nan
    #print("有买点，未达到盈利点，没有卖出")
    return 0
    
engine = create_engine('mysql+pymysql://root:901113@localhost:3306/stock')
sql = """
    select * from unique_stock;
"""
df = pd.read_sql(sql, engine)
temp= pd.DataFrame(columns=['ts_code','trade_date','open','high','low','close','pre_close','change','pct_chg','vol'\
                                ,'amount','limit_amount','open_profit'])
#取保留最高板
temp.append(df.iloc[0,:])
last_row = df.iloc[0,:]
for index,row in df.iterrows():
    if row['ts_code'] == last_row['ts_code']:
        continue
    else:
        temp = temp.append(last_row)
        last_row = row
